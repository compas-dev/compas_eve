[build-system]
requires = ["setuptools>=66.0"]
build-backend = "setuptools.build_meta"

# ============================================================================
# project info
# ============================================================================

[project]
name = "compas_eve"
description = "COMPAS Event Extensions: adds event-based communication infrastructure to the COMPAS framework."
keywords = ["events", "event-driven", "compas", "architecture", "distributed systems"]
authors = [
    { name = "Gonzalo Casas", email = "casas@arch.ethz.ch" },
    { name = "Chen Kasirer", email = "kasirer@arch.ethz.ch" },
]
license = { file = "LICENSE" }
readme = "README.md"
requires-python = ">=3.9"
dynamic = ['dependencies', 'optional-dependencies', 'version']
classifiers = [
    "Development Status :: 4 - Beta",
    "Topic :: Scientific/Engineering",
    "Operating System :: Unix",
    "Operating System :: POSIX",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
]

[project.entry-points.'compas_pb.plugins']
serializers = 'compas_eve.codecs.conversions'

[project.urls]
Homepage = "https://github.com/compas-dev/compas_eve"
Documentation = "https://compas.dev/compas_eve"
Repository = "https://github.com/compas-dev/compas_eve"
Changelog = "https://github.com/compas-dev/compas_eve/blob/main/CHANGELOG.md"
Issues = "https://github.com/compas-dev/compas_eve/issues"
Forum = "https://forum.compas-framework.org/"


# ============================================================================
# setuptools config
# ============================================================================

[tool.ruff]
line-length = 179
indent-width = 4
target-version = "py39"
exclude = ["src/compas_eve/proto"]

[tool.ruff.lint]
select = ["E", "F", "I"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["I001"]
"tests/*" = ["I001"]
"tasks.py" = ["I001"]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
python_files = [
    "test_*.py",
    "tests.py"
]
addopts = "-ra --strict --doctest-modules --doctest-glob=*.rst --tb=short"
doctest_optionflags= "NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL ALLOW_UNICODE ALLOW_BYTES NUMBER"
filterwarnings = "ignore::DeprecationWarning"

[tool.isort]
line_length = 179
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
force_single_line = true
ensure_newline_before_comments = true
known_first_party = "compas_eve"
default_section = "THIRDPARTY"
forced_separate = "test_compas_eve"
skip = ["__init__.py"]

[tool.ruff.lint.isort]
force-single-line = true
known-first-party = ["compas_eve"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pycodestyle]
max-doc-length = 179

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = "dynamic"